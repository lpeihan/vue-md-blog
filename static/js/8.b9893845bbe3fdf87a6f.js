webpackJsonp([8],{CTiU:function(v,_,s){v.exports=s("MvKN")},G8Dk:function(v,_,s){"use strict";s.d(_,"a",function(){return a}),s.d(_,"b",function(){return t});var a=function(){var v=this,_=v.$createElement;v._self._c;return v._m(0)},t=[function(){var v=this,_=v.$createElement,s=v._self._c||_;return s("section",[s("p",[v._v("{"),s("br"),v._v("  “title”: “单线程和事件循环”,"),s("br"),v._v("  “date”: “2018-04-28”,"),s("br"),v._v("  “tags”: “javascript”"),s("br"),v._v("}")]),v._v(" "),s("ol",[s("li",[s("p",[v._v("单线程")]),v._v(" "),s("ul",[s("li",[v._v("单线程的"),s("code",[v._v("JS")]),v._v("引擎")])]),v._v(" "),s("p",[v._v("所谓单线程，是指在"),s("code",[v._v("JS")]),v._v("引擎中负责解释和执行"),s("code",[v._v("JavaScript")]),v._v("代码的线程只有一个，称之主线程。")]),v._v(" "),s("ul",[s("li",[v._v("多线程的浏览器")])]),v._v(" "),s("p",[v._v("但是实际浏览器上还存在其他的线程。例如：界面渲染线程,处理"),s("code",[v._v("AJAX")]),v._v("请求的线程、处理"),s("code",[v._v("DOM")]),v._v("事件的线程、定时器线程、读写文件的线程等等。")]),v._v(" "),s("ul",[s("li",[s("p",[s("code",[v._v("js引擎线程")]),v._v("和"),s("code",[v._v("界面渲染引擎")]),v._v("互斥")]),v._v(" "),s("p",[s("code",[v._v("界面渲染引擎")]),v._v("负责渲染浏览器"),s("code",[v._v("html")]),v._v("元素，当界面需要重绘"),s("code",[v._v("Repaint")]),v._v("或由于某种操作引发回流"),s("code",[v._v("reflow")]),v._v("时,该线程就会执行。在脚本中对界面进行更新操作，如添加结点、删除结点或改变结点的外观等更新并不会立即体现出来，这些操作将保存在一个队列中，待"),s("code",[v._v("JavaScript")]),v._v("引擎空闲时才有机会渲染出来.")])])])])]),v._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[s("p",[v._v("可视化描述")]),v._v(" "),s("p",[s("img",{attrs:{src:"http://note.youdao.com/yws/api/personal/file/391F49F1EB8040D194BD6B0F3DFE5969?method=download&shareKey=cdf29e565ce8891507a246658f8a5196",alt:"stack"}})])])]),v._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[s("p",[v._v("栈"),s("code",[v._v("stack")])]),v._v(" "),s("p",[v._v("函数调用形成了一个栈帧。")]),v._v(" "),s("pre",[s("code",{staticClass:"lang-javascript"},[s("span",{staticClass:"hljs-function"},[s("span",{staticClass:"hljs-keyword"},[v._v("function")]),v._v(" "),s("span",{staticClass:"hljs-title"},[v._v("foo")]),v._v("("),s("span",{staticClass:"hljs-params"},[v._v("b")]),v._v(") ")]),v._v("{\n  "),s("span",{staticClass:"hljs-keyword"},[v._v("var")]),v._v(" a = "),s("span",{staticClass:"hljs-number"},[v._v("10")]),v._v(";\n  "),s("span",{staticClass:"hljs-keyword"},[v._v("return")]),v._v(" a + b + "),s("span",{staticClass:"hljs-number"},[v._v("11")]),v._v(";\n}\n"),s("p",[s("span",{staticClass:"hljs-function"},[s("span",{staticClass:"hljs-keyword"},[v._v("function")]),v._v(" "),s("span",{staticClass:"hljs-title"},[v._v("bar")]),v._v("("),s("span",{staticClass:"hljs-params"},[v._v("x")]),v._v(") ")]),v._v("{\n"),s("span",{staticClass:"hljs-keyword"},[v._v("var")]),v._v(" y = "),s("span",{staticClass:"hljs-number"},[v._v("3")]),v._v(";\n"),s("span",{staticClass:"hljs-keyword"},[v._v("return")]),v._v(" foo(x * y);\n}")]),v._v("\n"),s("p",[s("span",{staticClass:"hljs-built_in"},[v._v("console")]),v._v(".log(bar("),s("span",{staticClass:"hljs-number"},[v._v("7")]),v._v("));\n")])])]),s("p"),v._v(" "),s("p",[v._v("当调用"),s("code",[v._v("bar")]),v._v("时，创建了第一个帧 ，帧中包含了"),s("code",[v._v("bar")]),v._v("的参数和局部变量。当"),s("code",[v._v("bar")]),v._v("调用"),s("code",[v._v("foo")]),v._v("时，第二个帧就被创建，并被压到第一个帧之上，帧中包含"),s("code",[v._v("foo")]),v._v("的参数和局部变量。当"),s("code",[v._v("foo")]),v._v("返回时，最上层的帧就被弹出栈。当 "),s("code",[v._v("bar")]),v._v("返回的时候，栈就空了。")])])]),v._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[s("p",[v._v("堆"),s("code",[v._v("heap")])]),v._v(" "),s("p",[v._v("对象被分配在一个堆中，一个用以表示一个内存中大的未被组织的区域。")]),v._v(" "),s("p",[v._v("当我们需要访问引用类型（如对象，数组，函数等）的值时，首先从栈中获得该对象的地址指针，然后再从堆内存中取得所需的数据。")])]),v._v(" "),s("li",[s("p",[v._v("消息队列"),s("code",[v._v("message queue")])]),v._v(" "),s("p",[v._v("当事件触发时，比如鼠标点击，"),s("code",[v._v("ajax")]),v._v("执行完成，"),s("code",[v._v("setTimeout")]),v._v("时间到了，表示异步任务完成，会将事件监听器函数封装成一条消息放到消息队列中，等待主线程执行。")]),v._v(" "),s("p",[v._v("一个"),s("code",[v._v("JavaScript")]),v._v("运行时包含了一个待处理的消息队列。每一个消息都与一个回调函数相关联。当栈为空时，从队列中取出一个消息进行处理。")])])]),v._v(" "),s("ol",{attrs:{start:"6"}},[s("li",[s("p",[v._v("事件循环"),s("code",[v._v("event loop")])]),v._v(" "),s("p",[v._v("为什么有个事件呢？")]),v._v(" "),s("pre",[s("code",[v._v("因为消息队列中的每条消息实际上都对应着一个事件。\n")])]),s("p",[v._v("主线程只会做一件事情，就是从消息队列里面取消息、执行消息，再取消息、再执行。当消息队列为空时，就会等待直到消息队列变成非空。")]),v._v(" "),s("pre",[s("code",{staticClass:"lang-javascript"},[s("span",{staticClass:"hljs-keyword"},[v._v("while")]),v._v("("),s("span",{staticClass:"hljs-keyword"},[v._v("true")]),v._v(") {\n  var "),s("span",{staticClass:"hljs-keyword"},[v._v("message")]),v._v(" = queue.get();\n  execute("),s("span",{staticClass:"hljs-keyword"},[v._v("message")]),v._v(");\n}\n")])]),v._v(" "),s("p",[v._v(" 每次"),s("code",[v._v("event loop")]),v._v("查看消息队列，找到最老的消息，压入栈，执行之，执行完了，就进行一次视图渲染。周而复始，直到所有消息队列都执行完毕。")]),v._v(" "),s("p",[s("img",{attrs:{src:"http://note.youdao.com/yws/api/personal/file/B4284E1E3142411F982C8E813E3B544A?method=download&shareKey=cdf29e565ce8891507a246658f8a5196",alt:"event-loop"}})]),v._v(" "),s("p",[v._v(" （"),s("code",[v._v("Event Loop")]),v._v("是 "),s("code",[v._v("JavaScript")]),v._v(" 的运行环境（比如浏览器）提供的机制）")])]),v._v(" "),s("li",[s("p",[v._v("添加消息")]),v._v(" "),s("p",[v._v("在浏览器里，当一个事件出现且有一个事件监听器被绑定时，消息会被随时添加。如果没有事件监听器，事件会丢失。所以点击一个附带点击事件处理函数的元素会添加一个消息。其它事件亦然。")])]),v._v(" "),s("li",[s("p",[v._v("生产者和消费者")]),v._v(" "),s("p",[v._v("从生产者与消费者的角度看，异步过程是这样的：")]),v._v(" "),s("p",[v._v("工作线程是生产者，主线程是消费者(只有一个消费者)。工作线程执行异步任务，执行完成后把对应的回调函数封装成一条消息放到消息队列中；主线程不断地从消息队列中取消息并执行，当消息队列空时主线程阻塞，直到消息队列再次非空。")])]),v._v(" "),s("li",[s("p",[v._v("参考")]),v._v(" "),s("p",[s("a",{attrs:{href:"https://segmentfault.com/a/1190000004322358"}},[v._v("https://segmentfault.com/a/1190000004322358")])]),v._v(" "),s("p",[s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/EventLoop"}},[v._v("https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/EventLoop")])])])])])}]},MvKN:function(v,_,s){"use strict";Object.defineProperty(_,"__esModule",{value:!0});var a=s("G8Dk"),t=s("18Nq"),e=Object(t.a)(null,a.a,a.b,!1,null,null,null);_.default=e.exports}});
//# sourceMappingURL=8.b9893845bbe3fdf87a6f.js.map